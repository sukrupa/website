namespace :deploy do
 
    # This MUST be run from the root project directory. 
    # e.g.  cap -f ops/deploy/capfile  -T    

    def work_with_staging
        set :target_server, "twu-staging" 
        server "#{target_server}", :staging_server
        set :user, "go"
        set :deploy_to, "/var/opt/sukrupa/sukrupa-website"
    end

    def work_with_beta
        set :target_server, "beta.sukrupa.org"
        server "#{target_server}", :beta_server
        set :user, "sukrupaweb"
        set :deploy_to, "/home/sukrupaweb/beta.sukrupa.org"
    end

    desc "deploy to twu-staging"
    task :staging do 
        work_with_staging
        set :bootstrap_servertype, "-d"      
        default
        create_apache_config_file
        create_apache_symlink
        restart_apache    
    end

    desc "deploy to beta.sukrupa.org"
    task :beta do
    	work_with_beta
        set :bootstrap_servertype, "-b"
        setup_wordpress
        move_in_wp_config
        protect_beta
     	safety_check
    end
 
    task :default do
        setup_wordpress
        safety_check
    end

    task :setup_wordpress do
        upload_artifact
        run_bootstrap
    end

    def protect_beta
        to_append = <<EOF
            # This restricts the beta site for so search engines or other people \\n
            # don't use it accidentally. We don't want duplicate content indexed \\n
            # by google, nor do we want comments added to 'fake posts.' \\n
            AuthName \\"Restricted Beta Area\\" \\n
            AuthType Basic \\n
            AuthUserFile /home/sukrupaweb/conf/.htpasswd \\n
            AuthGroupFile /dev/null \\n
            require valid-user \\n
EOF
        run "echo -e \"#{to_append}\" >> #{deploy_to}/installed-wordpress/.htaccess"
        run "echo -e \"User-agent: *\\nDisallow: /\" >> #{deploy_to}/installed-wordpress/robots.txt"
    end

    task :upload_artifact do
        run "mkdir -p #{deploy_to}/content #{deploy_to}/database-backups"
        system ("tar cfz toUpload.tar.gz content bootstrap.sh conf lib scripts sukrupa-theme")
        upload "toUpload.tar.gz", "#{deploy_to}/", :via => :scp, :recursive => true
        system ("rm toUpload.tar.gz")
        run "cd #{deploy_to}; tar xzf toUpload.tar.gz --overwrite; rm toUpload.tar.gz"        
    end
    task :run_bootstrap do
        run "cd #{deploy_to} && sh bootstrap.sh #{bootstrap_servertype}" 
        run "rm #{deploy_to}/bootstrap.sh" 
        # TODO, you need to later edit permissions to block these files
        run "rm -r #{deploy_to}/lib" 
    end
    
    task :move_in_wp_config do
      run "cp #{deploy_to}/../conf/wp-config-beta.php #{deploy_to}/installed-wordpress/wp-config.php"
    end

    task :create_apache_symlink do
        run "#{sudo} ln -sf #{deploy_to}/conf/apache-sukrupa-dev.conf /etc/apache2/sites-enabled/apache-sukrupa.conf"
    end
    task :create_apache_config_file do
        run "cd #{deploy_to} && cp conf/apache-sukrupa-dev.conf.sample conf/apache-sukrupa-dev.conf"
        run "cd #{deploy_to} && sed -i 's:##sukrupa-website-path##:#{deploy_to}:g' conf/apache-sukrupa-dev.conf"
        run "cd #{deploy_to} && sed -i 's:##server-name##:#{target_server}:g' conf/apache-sukrupa-dev.conf"
    end
    task :restart_apache do
        run "#{sudo} /etc/init.d/apache2 restart"
    end

    task :safety_check do
        work_with_beta
        wgetresult=0
        (1..3).each do
            wgetresult = system "wget --spider http://#{target_server} 2>&1 | grep 401"
            break if wgetresult
            sleep 2        
        end
        fail "Could not contact webserver: #{target_server}" unless wgetresult
    end
end
